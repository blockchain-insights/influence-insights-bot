version: '3.8'

services:
  postgres:
    container_name: postgres-twitter-db
    image: postgres:16.3-alpine3.20
    ports:
      - "5431:5432"
    volumes:
      - "postgres-data-twitter-db:/var/lib/postgresql/data"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-twitter_bot_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeit456$}
    restart: unless-stopped

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "scheduler", "worker", "--beat", "-E", "--loglevel=info"]
    depends_on:
      - postgres
    environment:
      - REDIS_URL=${REDIS_URL}  # Use existing Redis instance
      - FETCH_API_BASE_URL=${FETCH_API_BASE_URL}
      - CALLER_INTERVAL_MINUTES=${CALLER_INTERVAL_MINUTES}
      - TRIGGER_IMMEDIATE=${TRIGGER_IMMEDIATE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DATABASE_URL=${DATABASE_URL}
    restart: unless-stopped
    volumes:
      - ./logs:/logs

  scheduler-ui:
    image: mher/flower:latest
    container_name: scheduler-ui
    ports:
      - "5555:5555"
    command: ["celery", "flower", "--broker=redis://redis-sn22:6379/0"]
    depends_on:
      - scheduler
    restart: unless-stopped

volumes:
  postgres-data-twitter-db:
